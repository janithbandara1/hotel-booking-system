// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?   // for credentials
  phone         String?
  role          String    @default("customer") // customer or admin
  accounts      Account[]
  sessions      Session[]
  bookings      Booking[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Room {
  id          String    @id @default(cuid())
  name        String
  description String?
  price       Float
  capacity    Int
  image       String?
  available   Boolean   @default(true)
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Booking {
  id            String   @id @default(cuid())
  userId        String
  roomId        String
  checkIn       DateTime
  checkOut      DateTime
  guests        Int?
  status        String   @default("pending") // pending, confirmed, cancelled, paid
  otp           String?  // generated OTP
  otpSentAt     DateTime?
  paymentIntentId String? // Stripe payment intent ID
  paymentStatus String?  // Stripe payment status
  amount        Float?   // Total amount paid
  user          User     @relation(fields: [userId], references: [id])
  room          Room     @relation(fields: [roomId], references: [id])
  createdAt     DateTime @default(now()
  updatedAt     DateTime @updatedAt
}
